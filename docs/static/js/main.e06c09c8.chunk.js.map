{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAMlB,SACQ,uBACIO,KAAO,OACPC,MAAUT,EACVU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACpB,kCAAMA,SCFTO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WACPxB,EAASC,GACRwB,MAAK,SAAAC,GACFC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAER,CAACpB,IAGGqB,EDhB0BM,CAAa3B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAUrB,OAPAQ,QAAQC,IAAIT,GAQR,qCACA,oBAAIJ,UAAU,mCAAd,SAAmDhB,IACjDoB,GAAW,wCACb,qBAAKJ,UAAW,YAAhB,SAGYH,EAAOJ,KAAI,SAACC,GAAD,OAEH,aADA,CACC,EAAD,eAESA,GADGA,EAAIC,aES7BmB,EAlCM,WAEjB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KASA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAID,6BAEK8C,EAAWtB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAaA,GADLA,Y,MCtBhCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e06c09c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [ inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            //setCategories\n            setCategories((cat) => [inputValue, ...cat]);\n            setInputValue('');\n        }\n        \n        \n    }\n    return (\n        <form onSubmit= { handleSubmit }>\n                <input \n                    type = \"text\"\n                    value = { inputValue }\n                    onChange = { handleInputChange }\n                />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async(category) => {\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5RC8dhK9aEZ9dbM6lirmGoj7cL5ezOKH`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    // console.log(data);\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    // console.log(id, title, url );\n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img src={ url } alt= { title }/>\n                <p> { title }</p>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setimages] = useState([]);\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    // console.log(data);\n    console.log(loading);\n\n    // useEffect( () => {\n    //     getGifs( category ) //esta instruccion se ejecutara cuando el componente es renderizado por primera vez\n    //     .then(imgs => setimages(imgs)); \n    // }, [category])\n \n    return (\n        <>\n        <h3 className=\"animate__animated animate__flash\">{ category }</h3>\n        { loading && <p>Loading</p> }\n        <div className= \"card-grid\">\n            \n                {\n                    images.map((img) => (\n                            // <li key= { id }>{ title }</li>\n                            <GifGridItem \n                                key = { img.id }\n                                { ...img }\n                            />\n                        ))\n                }\n            \n        </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs( category ) //esta instruccion se ejecutara cuando el componente es renderizado por primera vez\n        .then(imgs => {\n            setTimeout(() => {\n                \n                setState({\n                    data: imgs,\n                    loading: false,\n                })\n            }, 500);\n         }); \n    }, [category])\n\n\n    return state; // { data:[], loading: true }\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Baby Yoda']);\n\n    // const handleAdd = () => {\n    //     const newSerie = 'Sailor Moon';\n    //     // setCategories([...categories, newSerie]);\n    //     setCategories((cat) => [...cat, newSerie]);\n    //     \n    // }\n    \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr />\n\n            {/* <button onClick = { handleAdd }>Agregar</button> */}\n\n           <ol>\n               { \n                categories.map(category => (\n                    // <li key= { cat }>{ cat }</li>\n                    <GifGrid \n                        key = { category } \n                        category = { category }\n                    />\n                ))\n               }\n           </ol>\n        </div>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//Tarea\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr /> \n\n"],"sourceRoot":""}